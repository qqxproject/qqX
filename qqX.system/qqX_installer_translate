#!/usr/bin/env bash

#  qqX project: early stage translation add-ins for the system_install script

##  Copyright (c)  Alex Genovese   https://github.com/qqxproject
#   SMALL CODE SNIPPETS eg the function printColor MAY BE USED
#   PERMISSIVELY in projects as MIT or similar, providing CLEAR ATTRIBUTIONS are shown.

# 	Otherwise:

# Licence  GPL3   https://www.gnu.org/licenses

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# https://www.gnu.org/licenses

# IF CODE IN GENERAL BECOMES USED IN ANY OTHER PROJECT,
# THE GPL3 LICENCE APPLIES & YOU SHOULD SHOW CLEAR ATTRIBUTIONS.

# shellcheck disable=SC1090,SC2034,SC2154

find_web_browser() {
	WebBrowser="$(xdg-settings get default-web-browser 2>/dev/null)"
	if [[ $WebBrowser ]]; then XDG_Web=1 ; else XDG_Web=
	fi
	WebBrowser="${WebBrowser/'.desktop'/}"
	if [[ "$WebBrowser" == *'firefox'* ]]; then WebBrowser="firefox"
	elif [[ "$WebBrowser" == *'falkon'* ]]; then WebBrowser="falkon"
	elif [[ $(type -p 'google-chrome') ]]; then  WebBrowser="google-chrome"
	elif [[ $(type -p falkon) ]]; then  WebBrowser="falkon"
	elif [[ $(type -p midori) ]]; then  WebBrowser="midori"
	elif [[ $XDG_Web ]]; then WebBrowser="xdg-open"
	else WebBrowser=
	fi
}

find_translation_lang() {
	TxLang= ; SystemLang=
	# Use these for lookups, given https://cloud.google.com/translate/docs/languages#automl
	# And that @ 2025, the following have DIRECT PAIR Google data files:
	Iso_639_1_List="af ar az bg bn ca cs cy da de el en es et fa fi fr gl gu hi hr ht hu id is it ja ka ko lt lv mr ms nl no pa pl pt "
	Iso_639_1_List+="ro ru sk sl sq sr sv sw th tr uk ur vi zh"
	# Note, this normally includes zh-TW, but as standard zh is official in TW, just use zh > See https://en.wikipedia.org/wiki/Taiwan
	if grep -qs  "${LANG:0:2}" <<< "$Iso_639_1_List"; then SystemLang="${LANG:0:2}"
	elif grep -qs  "${GDM_LANG:0:2}" <<< "$Iso_639_1_List"; then SystemLang="${GDM_LANG:0:2}"
	elif grep -qs  "${LANGUAGE:0:2}" <<< "$Iso_639_1_List"; then SystemLang="${LANGUAGE:0:2}"
	fi
	# And where 'en' has been added for grep purposes as TxLang must be non-original (non en), otherwise Google complains
	[[ $SystemLang == "en" ]] && TxLang="it"
	# And where caps vars are from std env
	if [[ ! $TxLang ]]; then
		if grep -qs  "${LANG:0:2}" <<< "$Iso_639_1_List"; then TxLang="${LANG:0:2}"
		elif grep -qs  "${GDM_LANG:0:2}" <<< "$Iso_639_1_List"; then TxLang="${GDM_LANG:0:2}"
		elif grep -qs  "${LANGUAGE:0:2}" <<< "$Iso_639_1_List"; then TxLang="${LANGUAGE:0:2}"
		fi
	fi
	# If not present in list, set to something known to work
	[[ ! $TxLang ]] && TxLang="it"
}

find_translate_text() {
	grep -A 500 TxTxt=\""$1"\" "$(pwd)/qqX.system/translate.from.english.txt" | grep -m 1 -B 500 'TxTxt_End' \
	| grep "${TxLang}=" | cut -d '=' -f 2- | tr -d '"'
}

open_installer_tx_screens_in_browser() {
	# TODO
	printf "\n\n  For General notes on translation see: \n\n  https://qqxproject.org/docs/Translation"
	printf "\n\n  Google Chrome or Microsoft Edge are recommended"
	printf "\n\n  Or https://translate.google.com in Firefox and others"
	printColor "\n\n  [enter] to attempt Google auto-translate of settings to '%s' using %s " "$TxLang" "$WebBrowser"
	printColor "\n\n  [t] open 'translate.google' in %s  [T] open qqX translation notes  [b] to go back "  "$WebBrowser"
	printf "\n\n  This link may need pasting to the webpages tab:"
	printf " \n\n  https://github.com/qqxproject/qqX/blob/main/qqX_settings \n\n"
	read -rp "  >  "  TxSetCode
	if [[ ! $TxSetCode ]]; then
		printf "\n  Opening Browser ... \n\n"
		(nohup &> /dev/null  "$WebBrowser"  \
		"https://github-com.translate.goog/qqxproject/qqX/blob/main/qqX_settings?_x_tr_sl=en&_x_tr_tl=${TxLang}&_x_tr_hl=en&_x_tr_pto=wapp"  & ) \
		|| web_browser_not_found_message
		sleep 1
	elif [[ $TxSetCode == "t" ]]; then
		printf "\n  Opening Google Translate in Browser ... \n\n"
		(nohup &> /dev/null  "$WebBrowser" "https://translate.google.com"  & ) || web_browser_not_found_message
		sleep 1
	elif [[ $TxSetCode == "T" ]]; then
		printf "\n  Opening qqX Translation notes in Browser ... \n\n"
		(nohup &> /dev/null  "$WebBrowser" "https://qqxproject.org/docs/Translation"  & ) || web_browser_not_found_message
		sleep 1
	else
		TxSetCode= ; return
	fi
}
